version: '3'

services:

  api-gateway:
    container_name: api-gateway
    image: ${DOCKERHUB_USERNAME}/waither-gateway:latest
    network_mode: host
    depends_on:
      - config
    ports:
      - "443:443"
#    restart: always
    restart: no
    volumes:
      - /home/ec2-user/logs/api-gateway:/logs


  config:
    container_name: config
    image: ${DOCKERHUB_USERNAME}/waither-config:latest
    network_mode: host
    ports:
      - "8888:8888"
    depends_on:
      - eureka
    environment:
      CONFIG_GIT_URI : ${CONFIG_GIT_URI}
      CONFIG_PASSPHRASE : ${CONFIG_PASSPHRASE}
#    restart: always
    restart: no
    volumes:
      - /home/ec2-user/logs/config:/logs

  eureka:
    container_name: eureka
    image: ${DOCKERHUB_USERNAME}/waither-eureka:latest
    network_mode: host
    ports:
      - "8761:8761"
#    restart: always
    restart: no
    volumes:
      - /home/ec2-user/logs/eureka:/logs

  user-service:
    container_name: user-service
    image: ${DOCKERHUB_USERNAME}/waither-user:latest
    network_mode: host
    depends_on:
      - config
    ports:
      - "8080:8080"
#    restart: unless-stopped #수동으로 중지되지 않는 이상 항상 재실행
    restart: no
    volumes:
      - /home/ec2-user/logs/user-service:/logs

  weather-service:
    container_name: weather-service
    image: ${DOCKERHUB_USERNAME}/waither-weather:latest
    network_mode: host
    depends_on:
      - config
    ports:
      - "8081:8081"
#    restart: unless-stopped
    restart: no
    volumes:
      - /home/ec2-user/logs/weather-service:/logs:latest

  noti-service:
    container_name: noti-service
    image: ${DOCKERHUB_USERNAME}/waither-noti:latest
    network_mode: host
    depends_on:
      - config
    ports:
      - "8082:8082"
#    restart: unless-stopped
    restart: no
    volumes:
      - /home/ec2-user/logs/noti-service:/logs
        
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
