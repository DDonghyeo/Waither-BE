plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.springdoc.openapi-gradle-plugin" version '1.8.0'
}

group = 'com.waither'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //Spring Cloud Config Server
    implementation 'org.springframework.cloud:spring-cloud-config-client:4.0.3'// Config Client
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.3'

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Jackson 라이브러리
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Springdoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // File
    implementation 'org.apache.poi:poi-ooxml:5.2.0'
}

openApi {
    apiDocsUrl.set("http://localhost:3000") // Document URL
    outputDir.set(file("$rootDir/docs")) // Build Result Path
    outputFileName.set("weather.json") // Build Result File Name
    groupedApiMappings.set(Map.of("http://localhost:8081/weather/api-docs", "weather.json"))
    waitTimeInSeconds.set(60) // Timeout
    customBootRun {
        args.add("--spring.profiles.active=dev")
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
